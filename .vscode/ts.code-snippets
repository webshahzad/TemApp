{
  // Place your Android workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  "License header": {
    "scope": "javascript,typescript,javascriptreact,typescriptreact",
    "prefix": "clh",
    "body": [
      "//----------------------------------------------------//",
      "// Copyright Â© 2020 Capovela LLC.                     //",
      "// Proprietary and Confidential. All rights reserved. //",
      "//----------------------------------------------------//",
      "",
    ]
  },
	"RN Component": {
		"prefix": "tsrnc",
		"description": "React Native component definition",
		"body": [
			"import React from 'react'",
			"",
			"interface ${TM_FILENAME_BASE}Props {",
			"}",
			"",
			"export function $TM_FILENAME_BASE(p: ${TM_FILENAME_BASE}Props): React.ReactElement {",
			"  return (",
			"    $0",
			"  )",
			"}",
			"",
			// "const styles = StyleSheet.create({",
			// "})",
		]
	},
  "RN StyleSheet": {
    "scope": "javascriptreact,typescriptreact",
    "prefix": "stylesheet",
    "body": [
      "const styles = StyleSheet.create({",
      "  $0",
      "})",
    ]
  },
	"TS Stateful class": {
		"prefix": "tssc",
		"description": "React Native component definition",
		"body": [
			"import { Stateful } from 'reactronic'",
			"",
			"export class $TM_FILENAME_BASE extends Stateful {",
			"  $0",
			"}",
			"",
		]
	},
}
